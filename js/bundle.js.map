{"version":3,"file":"bundle.js","mappings":";;;;;;;;;;;;;;;AAA4I;AAC5I;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,kEAAqB;AACvB,EAAE,iEAAoB;AACtB;AACA;AACA,IAAI,mEAAsB;AAC1B,IAAI,wDAAW;AACf,GAAG;AACH;AACA,uCAAuC,kDAAK;AAC5C;AACA;AACA;AACA,IAAI,sDAAS;AACb,IAAI,sDAAS;AACb,GAAG;AACH;AACA;AACA,iEAAe,IAAI;;;;;;;;;;;;;;;;;;;;ACxBnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;UCrJA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACNkC;AAClC;AACA,kDAAkD,yDAAI","sources":["webpack:///./js/modules/form.js","webpack:///./js/utils/util.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./js/script.js"],"sourcesContent":["import {setBtnResetNotDisabled, reset, calcTotal, getDynamicInformation, getStaticInformation, updateTotal, showTotal} from '../utils/util';\r\n\r\nfunction form(formSelector) {\r\n  const form = document.querySelector(formSelector);\r\n  const btnCalculate = form.querySelector('[name=\"submit\"]');\r\n  const btnReset = form.querySelector('[name=\"reset\"]');\r\n\r\n  getDynamicInformation('input[type=\"text\"]');\r\n  getStaticInformation('[name=\"gender\"]', '[name=\"activity\"]');\r\n\r\n  form.addEventListener('input', () => {\r\n    setBtnResetNotDisabled(btnReset, 'input[type=\"text\"]');\r\n    updateTotal();\r\n  });\r\n  \r\n  form.addEventListener('reset', () => reset(btnCalculate, btnReset));\r\n\r\n  form.addEventListener('submit', (evt) => {\r\n    evt.preventDefault();\r\n    calcTotal();\r\n    showTotal();\r\n  });\r\n}\r\n\r\nexport default form;","const resultBox = document.querySelector('.counter__result');\r\nconst resultNorm = resultBox.querySelector('#calories-norm');\r\nconst resultMin = resultBox.querySelector('#calories-minimal');\r\nconst resultMax = resultBox.querySelector('#calories-maximal');\r\n\r\nlet arr = [],\r\n    sex = 'male',\r\n    ratio = 1.2,\r\n    age, height, weight;\r\n\r\nconst PhysicalActivityRatio = {\r\n  WEIGHT: 10,\r\n  HEIGHT: 6.25,\r\n  AGE: 5,\r\n};\r\n\r\nconst GenderRatio = {\r\n  MALE: -5,\r\n  FEMALE: 161,\r\n};\r\n\r\nconst CaloriesMinMaxRatio = {\r\n  MIN: 0.85,\r\n  MAX: 1.15,\r\n};\r\n\r\nconst getId = elem =>  elem.getAttribute('id');\r\n\r\nconst validateInput = (input) => {\r\n  const btn = document.querySelector('[name=\"submit\"]');\r\n\r\n  if (!input.value.match(/\\D/g) && !input.value.match(/\\s/g) && input.value !== '') {\r\n    if (!arr.includes(input)) {\r\n      arr.push(input);\r\n      input.style.border = '';\r\n    }\r\n  } else {\r\n    if (arr.includes(input)) {\r\n      arr.splice(arr.indexOf(input), 1);\r\n    }\r\n    input.style.border = '1px solid red';\r\n  }\r\n\r\n  if (arr.length === 3) {\r\n    btn.disabled = false;\r\n  } else {\r\n    btn.disabled = true;\r\n    resultBox.classList.add('counter__result--hidden');\r\n  }\r\n};\r\n\r\nconst checkValue = input => input.value !== '';\r\n\r\nconst setBtnResetNotDisabled = (btn, selector) => {\r\n  const inputs = Array.from(document.querySelectorAll(selector));\r\n\r\n  if (inputs.some(checkValue)) {\r\n    btn.disabled = false;\r\n  } else {\r\n    btn.disabled = true;\r\n  }\r\n};\r\n\r\nconst reset = (...btns) => {\r\n  btns.forEach(btn => setTimeout(() => btn.disabled = true), 1);\r\n  \r\n  resultBox.classList.add('counter__result--hidden');\r\n\r\n  return (\r\n    arr = [],\r\n    age, \r\n    weight, \r\n    height,\r\n    sex = 'male'\r\n  );\r\n};\r\n\r\nconst getDynamicInformation = (selector) => {\r\n  const inputs = document.querySelectorAll(selector);\r\n\r\n  inputs.forEach(input => {\r\n    input.addEventListener('input', () => {\r\n      validateInput(input);\r\n\r\n      switch(getId(input)) {\r\n        case 'height': \r\n          height = +input.value;\r\n          break;\r\n        case 'weight':\r\n          weight = +input.value;\r\n          break;\r\n        case 'age':\r\n          age = +input.value;\r\n          break;\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst getStaticInformation = (inputsSelector, radioSelector) => {\r\n  const inputs = document.querySelectorAll(inputsSelector);\r\n  const radios = document.querySelectorAll(radioSelector);\r\n\r\n  inputs.forEach(input => {\r\n    input.addEventListener('click', () => {\r\n      \r\n      switch(getId(input)) {\r\n        case 'gender-male':\r\n          return (sex = 'male');\r\n        case 'gender-female':\r\n          return (sex = 'female');\r\n      }\r\n    });\r\n  });\r\n\r\n  radios.forEach(radio => {\r\n    radio.addEventListener('click', () => {\r\n\r\n      switch(getId(radio)) {\r\n        case 'activity-minimal':\r\n          return (ratio = 1.2);\r\n        case 'activity-low':\r\n          return (ratio = 1.375);\r\n        case 'activity-medium':\r\n          return (ratio = 1.55);\r\n        case 'activity-high':\r\n          return (ratio = 1.725);\r\n        case 'activity-maximal':\r\n          return (ratio = 1.9);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst calc = (age, weight, height, sex, ratio) => {\r\n  return (\r\n    Math.round(((PhysicalActivityRatio.WEIGHT * weight) + (PhysicalActivityRatio.HEIGHT * height) - (PhysicalActivityRatio.AGE * age) - GenderRatio[sex.toUpperCase()]) * ratio)\r\n  );\r\n};\r\n\r\nconst calcTotal = () => {\r\n  resultNorm.textContent = calc(age, weight, height, sex, ratio);\r\n  resultMin.textContent = Math.round(calc(age, weight, height, sex, ratio) * CaloriesMinMaxRatio.MIN);\r\n  resultMax.textContent = Math.round(calc(age, weight, height, sex, ratio) * CaloriesMinMaxRatio.MAX);\r\n};\r\n\r\nconst showTotal = () => resultBox.classList.remove('counter__result--hidden');\r\n\r\nconst updateTotal = () => calcTotal();\r\n\r\nexport {\r\n  getDynamicInformation,\r\n  getStaticInformation,\r\n  setBtnResetNotDisabled,\r\n  calcTotal,\r\n  updateTotal,\r\n  showTotal,\r\n  reset\r\n};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import form from \"./modules/form\";\r\n\r\nwindow.addEventListener('DOMContentLoaded', () => form('.form'));\r\n"],"names":[],"sourceRoot":""}